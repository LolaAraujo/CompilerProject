start: statement+

statement : declaracion ";"
          | constante ";"
          | entrada ";"
          | salida ";"
          | expression ";"
          | condicional
          | switch
          | asignacion ";" 
          | loop
          | control_flujo ";"
          | funcion
          | try_catch
          | module ";"
          | exportacion ";"





tipo_dato : "int" | "float" | "bool" | "char" | "string"
            | "array" "<" tipo_dato ">"
            | "struct"
            | "enum"
            | "void"

entrada : "read" "(" identificador ")"
salida : "print" "(" expression ")"

identificador : IDENTIFICADOR

digit : "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
number : digit+
float_number : digit+ "." digit+

operador_aritmetico : PLUS | MINUS | STAR | SLASH | PERCENT
operador_relacional : LESSTHAN | MORETHAN | LESSEQUAL | MOREEQUAL | EQUAL | NOTEQUAL
operador_logico : AND | OR | NOT
operador_asignacion : ASSIGN | PLUSASSIGN | MINUSASSIGN | STARASSIGN | SLASHASSIGN

expression : expression_aritmetica | expression_booleana
expression_aritmetica : term (( PLUS | MINUS ) term)*
expression_booleana : comparacion (operador_logico comparacion)* | "(" expression_booleana ")"
comparacion : expression_aritmetica operador_relacional expression_aritmetica | "(" comparacion ")"


term : factor (( STAR | SLASH | PERCENT ) factor)*
factor : number | float_number | identificador | STRING | "(" expression ")"  

condicional : "if" "(" expression_booleana ")" bloque ("else" bloque)?

bloque : "{" (statement)* "}"

comentario: COMENTARIO_SIMPLE | COMENTARIO_MULTILINEA

switch : "switch" "(" expression ")" "{" casos "}"
casos : (case)+ ("default" ":" bloque)?
case : "case" expression ":" bloque

loop : "for" "(" (asignacion | declaracion) ";" expression_booleana ";" asignacion ")" bloque
      | "while" "(" expression_booleana ")" bloque
      | "do" bloque "while" "(" expression_booleana ")" ";"
      

declaracion : tipo_dato identificador (ASSIGN expression)? 

asignacion : identificador ASSIGN expression  
           | identificador operador_asignacion expression  

constante : "const" tipo_dato? identificador "=" expression

control_flujo : "break" | "continue" | "return" expression?

funcion : "func" identificador "(" (parametros)? ")" "->" tipo_dato bloque
parametros : tipo_dato identificador ("," tipo_dato identificador)*

try_catch : "try" bloque "catch" "(" identificador ")" bloque

module : "import" identificador
exportacion : "export" identificador

// ✅ DEFINICIÓN DE TOKENS
IDENTIFICADOR: /[a-zA-Z_][a-zA-Z0-9_]*/
STRING: /"[^"]*"/

PLUS: "+"
MINUS: "-"
STAR: "*"
SLASH: "/"
PERCENT: "%"

LESSTHAN: "<"
MORETHAN: ">"
LESSEQUAL: "<="
MOREEQUAL: ">="
EQUAL: "=="
NOTEQUAL: "!="

AND: "AND"
OR: "OR"
NOT: "NOT"

ASSIGN: "="
PLUSASSIGN: "+="
MINUSASSIGN: "-="
STARASSIGN: "*="
SLASHASSIGN: "/="

// ✅ Comentarios
COMENTARIO_SIMPLE: /\/\/.*/
COMENTARIO_MULTILINEA: /\/\*[\s\S]*?\*\//

%import common.WS
%ignore WS
